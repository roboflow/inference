FROM nvcr.io/nvidia/tensorrt:25.03-py3
WORKDIR /app

RUN apt-get update -y && apt-get install -y \
    libsm6 \
    libxext6 \
    libopencv-dev \
    uvicorn \
    rustc \
    cargo \
    libgdal-dev \
    && rm -rf /var/lib/apt/lists/*

COPY requirements/requirements.sam.txt \
    requirements/requirements.clip.txt \
    requirements/requirements.http.txt \
    requirements/requirements.waf.txt \
    requirements/requirements.gpu.txt \
    requirements/requirements.gaze.txt \
    requirements/requirements.doctr.txt \
    requirements/requirements.groundingdino.txt \
    requirements/_requirements.txt \
    requirements/requirements.sdk.http.txt \
    ./

RUN pip install --upgrade pip setuptools && pip install \
    -r _requirements.txt \
    -r requirements.sam.txt \
    -r requirements.clip.txt \
    -r requirements.http.txt \
    -r requirements.waf.txt \
    -r requirements.gpu.txt \
    -r requirements.gaze.txt \
    -r requirements.doctr.txt \
    -r requirements.groundingdino.txt \
    -r requirements.sdk.http.txt \
    "scikit-image==0.25.2" \
    "mediapipe==0.10.14" \
    "onnxruntime-gpu==1.21.0" \
    "rasterio==1.4.3" \
    "shapely==2.0.7" \
    "opencv-python==4.10.0.84" \
    "opencv-contrib-python==4.10.0.84" \
    "python-doctr[torch]==0.11.0" \
    "psutil==7.0.0" \
    && rm -rf ~/.cache/pip
# above packages was picked in matching versions as pip was having issues resolving the dependencies fast
WORKDIR /app/
COPY inference inference
COPY inference_sdk inference_sdk
COPY docker/config/gpu_http.py gpu_http.py


# RUN sudo apt install --only-upgrade libstdc++6
ENV CORE_MODEL_SAM2_ENABLED=true
ENV VERSION_CHECK_MODE=continuous
ENV ONNXRUNTIME_EXECUTION_PROVIDERS=TensorrtExecutionProvider
ENV REQUIRED_ONNX_PROVIDERS=TensorrtExecutionProvider
ENV ORT_TENSORRT_ENGINE_CACHE_ENABLE=1
ENV CORE_MODEL_SAM_ENABLED=False
ENV PROJECT=roboflow-platform
ENV NUM_WORKERS=1
ENV HOST=0.0.0.0
ENV PORT=9001
ENV WORKFLOWS_STEP_EXECUTION_MODE=local
ENV WORKFLOWS_MAX_CONCURRENT_STEPS=4
ENV API_LOGGING_ENABLED=True
ENV PYTHONPATH=/app/:${PYTHONPATH}
ENV PATH=/opt/miniconda/bin:$PATH
ENV CORE_MODEL_TROCR_ENABLED=false
ENV ENABLE_PROMETHEUS=True

ENTRYPOINT uvicorn gpu_http:app --workers $NUM_WORKERS --host $HOST --port $PORT