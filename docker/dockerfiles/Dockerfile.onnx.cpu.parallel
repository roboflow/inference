FROM python:3.9 as base

WORKDIR /app

ARG DEBIAN_FRONTEND=noninteractive
ARG TARGETPLATFORM

RUN apt update -y && apt install -y \
    libxext6 \
    libopencv-dev \
    uvicorn \
    python3-pip \
    git \
    libgdal-dev \
    rustc \
    cargo \
    && rm -rf /var/lib/apt/lists/*

COPY requirements/requirements.sam.txt \
    requirements/requirements.clip.txt \
    requirements/requirements.cpu.txt \
    requirements/requirements.http.txt \
    requirements/requirements.waf.txt \
    requirements/requirements.gaze.txt \
    requirements/requirements.doctr.txt \
    requirements/requirements.parallel.txt \
    requirements/requirements.vino.txt \
    requirements/_requirements.txt \
    requirements/requirements.cli.txt \
    requirements/requirements.sdk.http.txt \
    ./

RUN if [ "${TARGETPLATFORM}" = "linux/amd64" ]; then mv requirements.vino.txt requirements.cpu.txt; fi

RUN pip3 install --upgrade pip && pip3 install "wheel>=0.38.1,<=0.45.1"
RUN pip3 install \
    -r _requirements.txt \
    -r requirements.sam.txt \
    -r requirements.clip.txt \
    -r requirements.cpu.txt \
    -r requirements.http.txt \
    -r requirements.waf.txt \
    -r requirements.gaze.txt \
    -r requirements.doctr.txt \
    -r requirements.parallel.txt \
    -r requirements.cli.txt \
    -r requirements.sdk.http.txt \
    "setuptools<=75.5.0" \
    --upgrade \
    && rm -rf ~/.cache/pip
RUN apt-get update && apt-get install -y lsb-release curl gpg
RUN curl -fsSL https://packages.redis.io/gpg | gpg --dearmor -o /usr/share/keyrings/redis-archive-keyring.gpg
RUN echo "deb [signed-by=/usr/share/keyrings/redis-archive-keyring.gpg] https://packages.redis.io/deb $(lsb_release -cs) main" | tee /etc/apt/sources.list.d/redis.list
RUN apt-get update && apt-get install -y redis

FROM scratch
COPY --from=base / /

WORKDIR /app/
COPY inference inference
COPY inference_sdk inference_sdk
COPY inference_cli inference_cli
COPY inference/enterprise/parallel/parallel_http_config.py parallel_http.py

ENV VERSION_CHECK_MODE=continuous
ENV PROJECT=roboflow-platform
ENV NUM_WORKERS=1
ENV HOST=0.0.0.0
ENV PORT=9001
ENV NUM_CELERY_WORKERS=12
ENV PYTHONPATH=/app/
ENV REDIS_HOST="localhost"
ENV REDIS_PORT="6380"
ENV CORE_MODELS_ENABLED=false
ENV WORKFLOWS_STEP_EXECUTION_MODE=local
ENV WORKFLOWS_MAX_CONCURRENT_STEPS=1
ENV API_LOGGING_ENABLED=True
ENV CORE_MODEL_SAM2_ENABLED=True
ENV CORE_MODEL_TROCR_ENABLED=false
ENV ENABLE_PROMETHEUS=True

ENTRYPOINT redis-server --io-threads 3 --save --port $REDIS_PORT & \
    celery -A inference.enterprise.parallel.tasks worker --prefetch-multiplier 2 --concurrency $NUM_CELERY_WORKERS -Q pre --loglevel=WARNING & \
    celery -A inference.enterprise.parallel.tasks worker --prefetch-multiplier 8 --concurrency $NUM_CELERY_WORKERS -Q post --loglevel=WARNING & \
    python3 inference/enterprise/parallel/infer.py & \
    uvicorn parallel_http:app --workers $NUM_WORKERS --host $HOST --port $PORT && fg