import type { PluginAPI } from 'tailwindcss/types/config';
import { Length } from './css';
export type PluginOptions = {
    checkSC144?: boolean;
};
type Breakpoints = [string?, string?];
export type ResolvedFluidThemeConfig = Partial<{
    defaultScreens: Breakpoints;
    defaultContainers: Breakpoints;
}>;
export default function getContext(config: PluginAPI['config'], theme: PluginAPI['theme'], { checkSC144 }?: PluginOptions): {
    readonly screens: {
        [x: string]: Length;
    };
    readonly sortedScreens: Length[];
    readonly defaultStartScreen: string | Length | undefined;
    readonly defaultEndScreen: string | Length | undefined;
    readonly containers: {
        [x: string]: Length;
    };
    readonly sortedContainers: Length[];
    readonly defaultStartContainer: string | Length | undefined;
    readonly defaultEndContainer: string | Length | undefined;
    theme: <TDefaultValue = Partial<import("tailwindcss/types/config").CustomThemeConfig & {
        extend: Partial<import("tailwindcss/types/config").CustomThemeConfig>;
    }> | undefined>(path?: string | undefined, defaultValue?: TDefaultValue | undefined) => TDefaultValue;
    prefix: string;
    separator: string;
    checkSC144: boolean;
};
export type Context = ReturnType<typeof getContext>;
export {};
