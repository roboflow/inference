name: "[STAGING] BUILD & PUSH - hosted inference docker"

on:
  workflow_dispatch:
    inputs:
      exclude_slim_lambda:
        type: boolean
        description: "Do you want to exclude SLIM version of lambda?"
        default: false
      exclude_core_models_lambda:
        type: boolean
        description: "Do you want to exclude CORE MODELS version of lambda?"
        default: false

jobs:
  build:
    runs-on:
      labels: depot-ubuntu-22.04-small
      group: public-depot
    timeout-minutes: 60
    steps:
      - name: 🛎️ Checkout
        uses: actions/checkout@v4
      - name: ⚙️ Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-region: ${{ secrets.AWS_REGION }}
          aws-access-key-id: ${{ secrets.STAGING_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.STAGING_AWS_ACCESS_KEY }}
      - name: 🔑 Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v1
        with:
          registries: ${{ secrets.STAGING_AWS_ACCOUNT_ID }}
          mask-password: "true" # see: https://github.com/aws-actions/amazon-ecr-login#docker-credentials
      - name: 🛠️ Build and push docker image [SLIM] to STAGING 😎
        if: ${{ github.event.inputs.exclude_slim_lambda == 'false' }}
        run: |
          ./docker/publish/onnx_lambda.sh roboflow-staging slim
      - name: 🛠️ Build and push docker image [CORE MODELS]  to STAGING 😎
        if: ${{ github.event.inputs.exclude_core_models_lambda == 'false' }}
        run: |
          ./docker/publish/onnx_lambda.sh roboflow-staging
